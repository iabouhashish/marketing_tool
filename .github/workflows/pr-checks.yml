name: PR Checks

on:
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  quick-tests:
    name: Quick Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        pip install -e .
        
    - name: Run quick unit tests
      run: |
        pytest tests/ -v --maxfail=3 --tb=short -x
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        
    - name: Run linting
      run: |
        black --check --diff src/ tests/
        isort --check-only --diff src/ tests/
        flake8 src/ tests/ --max-line-length=100
        mypy src/marketing_project/ --ignore-missing-imports

  smoke-tests:
    name: Smoke Tests
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .
        
    - name: Test CLI commands
      run: |
        marketing-project --help
        marketing-project run --help
        marketing-project serve --help
        marketing-project content-sources --help
        
    - name: Test import
      run: |
        python -c "import marketing_project; print('Import successful')"
        
    - name: Test configuration loading
      run: |
        python -c "from marketing_project.runner import run_marketing_project_pipeline; print('Configuration loaded')"

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit
        
    - name: Run safety check
      run: safety check --short-report
      
    - name: Run bandit
      run: bandit -r src/ -f short

  docker-build-test:
    name: Docker Build Test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: false
        tags: marketing-project:test
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Test Docker image
      run: |
        docker run --rm marketing-project:test --help
        docker run --rm marketing-project:test run --help
